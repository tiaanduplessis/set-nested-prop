{"version":3,"file":"set-nested-prop.js","sources":["../src/index.js"],"sourcesContent":["function clone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction set (\n  obj,\n  key = '',\n  val,\n  {\n    delimiter = '.',\n    force = false,\n    mut = false\n  } = {}\n) {\n  const parts = key.split ? key.split(delimiter) : [key]\n  const baseObj = mut ? obj : clone(obj)\n\n  parts.reduce((obj, key, index, arr) => {\n    const isLastPart = index === arr.length - 1\n\n    if (isLastPart) {\n      obj[key] = val\n      return\n    }\n\n    if (force && !obj[key]) {\n      obj[key] = {}\n    }\n\n    return obj[key]\n  }, baseObj)\n\n  return baseObj\n}\n\nfunction validArrays (arr1 = [], arr2 = []) {\n  return Array.isArray(arr1) && Array.isArray(arr2) && arr1.length === arr2.length\n}\n\nexport default function setNestedProp (obj,\n  key,\n  val,\n  config = {}) {\n  if (validArrays(key, val)) {\n    return key.reduce((acc, key, i) => {\n      return set(acc, key, val[i], config)\n    }, obj)\n  }\n\n  return set(obj, key, val, config)\n}\n"],"names":["set","obj","key","val","ref","const","parts","split","delimiter","baseObj","mut","JSON","parse","stringify","clone","reduce","index","arr","length","force","config","arr2","arr1","Array","isArray","acc","i"],"mappings":"AAIA,SAASA,EACPC,EACAC,EACAC,EACAC,kBAFM,wDAGQ,mCACJ,+BACF,GAGRC,IAAMC,EAAQJ,EAAIK,MAAQL,EAAIK,MAAMC,IAAcN,GAC5CO,EAAUC,EAAMT,EAfxB,SAAgBA,GACd,OAAOU,KAAKC,MAAMD,KAAKE,UAAUZ,IAcLa,CAAMb,GAiBlC,OAfAK,EAAMS,gBAAQd,EAAKC,EAAKc,EAAOC,GAG7B,GAFmBD,IAAUC,EAAIC,OAAS,EAW1C,OAJIC,IAAUlB,EAAIC,KAChBD,EAAIC,OAGCD,EAAIC,GARTD,EAAIC,GAAOC,GASZM,GAEIA,iBAOT,SAAuCR,EACrCC,EACAC,EACAiB,GACA,0BAR+BC,EAQVlB,YARDmB,EAQJpB,8BAPTqB,MAAMC,QAAQF,IAASC,MAAMC,QAAQH,IAASC,EAAKJ,SAAWG,EAAKH,OAQjEhB,EAAIa,gBAAQU,EAAKvB,EAAKwB,UACpB1B,EAAIyB,EAAKvB,EAAKC,EAAIuB,GAAIN,IAC5BnB,GAGED,EAAIC,EAAKC,EAAKC,EAAKiB,GAd5B,IAAsBE,EAAWD"}